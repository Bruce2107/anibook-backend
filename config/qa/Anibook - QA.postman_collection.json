{
	"info": {
		"_postman_id": "ee6e4da3-4fe8-4698-80dd-3b83324c68f4",
		"name": "Anibook - QA",
		"description": "# Dados\n```js\n\"dados\": {\n  \"name\": \"nome\",\n  \"synopsis\": \"sinopse\",\n  \"comment\": \"comentario\",\n  \"photo\": \"nome do arquivo de capa\",\n  \"fodler\": \"nome da pasta com as imagens\",\n  \"info\": {\n    \"author\": \"autor\",\n    \"status\": \"situacao da obra\",\n    \"numberEpisodes\": 12, //apenas animes\n    \"numberChapters\": 12, //apenas mangas\n    \"numberVolumes\": 1 //apenas mangas\n  },\n  \"images\": [\n    \"nome do arquivo\",\n    \"nome do arquivo\"\n  ],\n  \"whereWatch\": [ //apenas animes\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    },\n  ],\n  \"whereRead\": [ //apenas mangas\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    },\n  ],\n  \"musics\": [ //apenas animes\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    },\n  ]\n}\n```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Anime",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b81c28a-012f-436c-b58e-be2641d266b2",
										"exec": [
											"pm.test('Status should be 200', function (){\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes?limit=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										}
									]
								},
								"description": "This request should return a list with n elements.\r\nA limit can be specified"
							},
							"response": []
						},
						{
							"name": "GetByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c75bae4-b330-4a56-8b38-c5f4b63d8b34",
										"exec": [
											"pm.test('Status should be 200', function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste2"
										}
									]
								},
								"description": "This request should return a single result.\r\nThe 'name' are case sensitive and includes space.\r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "GetByName-NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc3d8b60-cbba-45be-b685-d75999ca6b26",
										"exec": [
											"pm.test('Status should be 404', function () {\r",
											"    pm.response.to.have.status(404)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "abc"
										}
									]
								},
								"description": "This request should return a single result.\r\nThe 'name' are case sensitive and includes space.\r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "GetRandomCards",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/card/random?limit=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"card",
										"random"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										}
									]
								},
								"description": "Return a list with cards.\r\nA limit can be specified"
							},
							"response": []
						},
						{
							"name": "GetCardByName",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/card/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"card",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste"
										}
									]
								},
								"description": "This request should return a single result.\r\nThe 'name' are case sensitive and includes space.\r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "GetCardByName-NotFound",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/card/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"card",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Mob 2"
										}
									]
								},
								"description": "This request should return a single result.\r\nThe 'name' are case sensitive and includes space.\r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "GetSort",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/sort?order=name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"sort"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "order",
											"value": "name"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetSortCard",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/card/sort?order=name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"card",
										"sort"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "order",
											"value": "name"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "CreateAnAnimeWithImages",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n        \"name\": \"High Score Girl\",\n        \"synopsis\": \"um garoto que gosta de lutar\",\n        \"comment\": \"mt bom\",\n        \"whereWatch\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"goyabu\",\n                \"name\":\"Goyabu\"\n            }\n        ],\n        \"info\": {\n            \"author\": \"toriama\",\n            \"status\": \"finalizado\",\n            \"numberEpisodes\": \"131\"\n        },\n        \"musics\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"romantic ageru yo\",\n                \"name\":\"Romantic\"\n            }\n        ]\n    }",
											"type": "text"
										},
										{
											"key": "card",
											"type": "file",
											"src": "oono.jpg"
										},
										{
											"key": "images",
											"type": "file",
											"src": [
												"HSGirlThumb-696x392.jpg",
												"maxresdefault.jpg"
											]
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/animes?folder=highscoregirl",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes"
									],
									"query": [
										{
											"key": "folder",
											"value": "highscoregirl"
										}
									]
								},
								"description": "Field accepts: folder, name, photo, synopsis, comment, images(an array of string), info(an object -> numberEpisodes), whereWatch and musics.\r\nwhereWatch and musics type: an object with language, url and name.\r\nFiles can be upload, in this case should be passed a query param for folder. The folder are used to create a file, when a file are send without a folder param, a undefined folder are created in server"
							},
							"response": []
						},
						{
							"name": "CreateAnAnimeWithoutImages",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n        \"name\": \"Teste\",\n        \"synopsis\": \"um garoto que gosta de lutar\",\n        \"comment\": \"mt bom\",\n        \"whereWatch\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"goyabu\",\n                \"name\":\"Goyabu\"\n            }\n        ],\n        \"info\": {\n            \"author\": \"toriama\",\n            \"status\": \"finalizado\",\n            \"numberEpisodes\": \"131\"\n        },\n        \"musics\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"romantic ageru yo\",\n                \"name\":\"Romantic\"\n            }\n        ]\n    }",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/animes",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateAnAnime-AlreadyExists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "456d0bf8-7b3d-4ea5-92f4-286acf18c754",
										"exec": [
											"pm.test('Status 409', function () {\r",
											"    pm.response.to.have.status(409)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n        \"name\": \"High Score Girl\",\n        \"synopsis\": \"um garoto que gosta de lutar\",\n        \"comment\": \"mt bom\",\n        \"whereWatch\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"goyabu\",\n                \"name\":\"Goyabu\"\n            }\n        ],\n        \"info\": {\n            \"author\": \"toriama\",\n            \"status\": \"finalizado\",\n            \"numberEpisodes\": \"131\"\n        },\n        \"musicas\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"romantic ageru yo\",\n                \"name\":\"Romantic\"\n            }\n        ]\n    }",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/animes",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateAnAnime-Unauthorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ca60652-04a4-482e-b1d6-9375bedc803e",
										"exec": [
											"pm.test('Status 401', function () {\r",
											"    pm.response.to.have.status(401)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n        \"name\": \"High Score Girl\",\n        \"synopsis\": \"um garoto que gosta de lutar\",\n        \"comment\": \"mt bom\",\n        \"whereWatch\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"goyabu\",\n                \"name\":\"Goyabu\"\n            }\n        ],\n        \"info\": {\n            \"author\": \"toriama\",\n            \"status\": \"finalizado\",\n            \"numberEpisodes\": \"131\"\n        },\n        \"musicas\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"romantic ageru yo\",\n                \"name\":\"Romantic\"\n            }\n        ]\n    }",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/animes",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PATCH",
					"item": [
						{
							"name": "UpdateAnyFieldThatAreNotFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d71aba1-76c6-4121-9867-7ce601533427",
										"exec": [
											"pm.test('Status should be 204', function () {\r",
											"    pm.response.to.have.status(204)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dados\": {\n        \"name\": \"nome teste12\",\n        \"synopsis\": \"sinopse teste\",\n        \"comment\": \"comentario teste\",\n        \"folder\": \"pasta teste\",\n        \"info\": {\n            \"author\": \"autor teste\",\n            \"status\": \"finalizado\",\n            \"numberEpisodes\": 1233\n        },\n        \"musics\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"teste\",\n                \"name\": \"teste\"\n            },\n            {\n                \"language\": \"portugues\",\n                \"url\": \"teste21\",\n                \"name\": \"teste2\"\n            }\n        ],\n        \"whereWatch\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"teste2\",\n                \"name\": \"teste\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "nome teste12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateImage-MissingFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8c93cdd-7a1e-4389-8b26-095e802af59c",
										"exec": [
											"pm.test('Status should be 422', function () {\r",
											"    pm.response.to.have.status(422)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}/animes/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste"
										}
									]
								},
								"description": "Should have the query param 'folder'.\r\nThe 'name' are case sensitive and includes space. \r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage-NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2613887b-d10e-4f8e-b409-637969080940",
										"exec": [
											"pm.test('Status should be 404', function () {\r",
											"    pm.response.to.have.status(404)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "card",
											"type": "file",
											"src": "Hi_Score_Girl_vol_1_cover.png"
										},
										{
											"key": "images",
											"type": "file",
											"src": "haruo.png"
										}
									]
								},
								"url": {
									"raw": "{{url}}/animes/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste21"
										}
									]
								},
								"description": "Should have the query param 'folder'.\r\nThe 'name' are case sensitive and includes space. \r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "images",
											"type": "file",
											"src": "hiscoregirl.jpg"
										},
										{
											"key": "card",
											"type": "file",
											"src": "haruo.png"
										}
									]
								},
								"url": {
									"raw": "{{url}}/animes/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "nome teste12"
										}
									]
								},
								"description": "Should have the query param 'folder'. The 'name' are case sensitive and includes space. Ex: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage-Unauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "images",
											"type": "file",
											"src": [
												"haruo.png",
												"Hi_Score_Girl_vol_1_cover.png",
												"oono.jpg"
											]
										}
									]
								},
								"url": {
									"raw": "{{url}}/animes/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "nome teste2"
										}
									]
								},
								"description": "Should have the query param 'folder'. The 'name' are case sensitive and includes space. Ex: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b45d597-9946-4c52-a43d-f7bf70dd923b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e6e9e3a9-e080-4e23-8522-4dad26db8cac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "DeleteAnime",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste212"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteAnime-NotFound",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Dragon Ball Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteAnime-Unauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/animes/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"animes",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Dragon Ball Z"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Image",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GetImage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/image/:folder/:anime",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										":folder",
										":anime"
									],
									"variable": [
										{
											"key": "folder",
											"value": "teste"
										},
										{
											"key": "anime",
											"value": "haruo.webp"
										}
									]
								},
								"description": "Get an image"
							},
							"response": []
						},
						{
							"name": "GetBackgroundImage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/image/background",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"background"
									]
								},
								"description": "Get an image"
							},
							"response": []
						},
						{
							"name": "GetImage-NotFound",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/image/:folder/:anime",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										":folder",
										":anime"
									],
									"variable": [
										{
											"key": "folder",
											"value": "hi"
										},
										{
											"key": "anime",
											"value": "foto.webp"
										}
									]
								},
								"description": "Get an image"
							},
							"response": []
						},
						{
							"name": "te",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "InsertImage",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "images",
											"type": "file",
											"src": [
												"/C:/Users/Zupper/Downloads/back/background/AkariAkaza.webp",
												"/C:/Users/Zupper/Downloads/back/background/AkariAkazaManga.webp",
												"/C:/Users/Zupper/Downloads/back/background/Akko.webp",
												"/C:/Users/Zupper/Downloads/back/background/AkkoAndLotte.webp",
												"/C:/Users/Zupper/Downloads/back/background/Albedo.webp",
												"/C:/Users/Zupper/Downloads/back/background/AnastasiaHoshin.webp",
												"/C:/Users/Zupper/Downloads/back/background/AnnieLeonhart.webp",
												"/C:/Users/Zupper/Downloads/back/background/Aqua.png",
												"/C:/Users/Zupper/Downloads/back/background/AquaNormal.png",
												"/C:/Users/Zupper/Downloads/back/background/Beatrice.webp",
												"/C:/Users/Zupper/Downloads/back/background/BeatriceCake.webp",
												"/C:/Users/Zupper/Downloads/back/background/Chariot.webp",
												"/C:/Users/Zupper/Downloads/back/background/Chinatsu.webp",
												"/C:/Users/Zupper/Downloads/back/background/CuteGirlHappy.webp",
												"/C:/Users/Zupper/Downloads/back/background/CuteGirlLaughing.webp",
												"/C:/Users/Zupper/Downloads/back/background/CuteGirlScared.webp",
												"/C:/Users/Zupper/Downloads/back/background/Dekomori.webp",
												"/C:/Users/Zupper/Downloads/back/background/DekomoriSpy.webp",
												"/C:/Users/Zupper/Downloads/back/background/DianaMad.webp",
												"/C:/Users/Zupper/Downloads/back/background/DianaTea.webp",
												"/C:/Users/Zupper/Downloads/back/background/Emilia.webp",
												"/C:/Users/Zupper/Downloads/back/background/Erwin.webp",
												"/C:/Users/Zupper/Downloads/back/background/Gohan.webp",
												"/C:/Users/Zupper/Downloads/back/background/GohanSSJ2.webp",
												"/C:/Users/Zupper/Downloads/back/background/GokuFlying.webp",
												"/C:/Users/Zupper/Downloads/back/background/GokuJumping.webp",
												"/C:/Users/Zupper/Downloads/back/background/GokuSleeping.webp",
												"/C:/Users/Zupper/Downloads/back/background/GokuTired.webp",
												"/C:/Users/Zupper/Downloads/back/background/Historia.webp",
												"/C:/Users/Zupper/Downloads/back/background/KarenKujou.gif",
												"/C:/Users/Zupper/Downloads/back/background/KonataIzumi.webp",
												"/C:/Users/Zupper/Downloads/back/background/KuririnSuspicious.webp",
												"/C:/Users/Zupper/Downloads/back/background/LupusreginaBeta.webp",
												"/C:/Users/Zupper/Downloads/back/background/MeguminHappy.webp",
												"/C:/Users/Zupper/Downloads/back/background/MeguminTired.webp",
												"/C:/Users/Zupper/Downloads/back/background/Mikasa.webp",
												"/C:/Users/Zupper/Downloads/back/background/NarberalGamma.webp",
												"/C:/Users/Zupper/Downloads/back/background/NarberalGammaRabbit.webp",
												"/C:/Users/Zupper/Downloads/back/background/NekoHearth.webp",
												"/C:/Users/Zupper/Downloads/back/background/Ram.webp",
												"/C:/Users/Zupper/Downloads/back/background/Rem.webp",
												"/C:/Users/Zupper/Downloads/back/background/RemBattle.webp",
												"/C:/Users/Zupper/Downloads/back/background/RinTohsaka.webp",
												"/C:/Users/Zupper/Downloads/back/background/RinTohsakaCrying.webp",
												"/C:/Users/Zupper/Downloads/back/background/SaitamaBad.webp",
												"/C:/Users/Zupper/Downloads/back/background/SaitamaLauhing.webp",
												"/C:/Users/Zupper/Downloads/back/background/SaitamaOK.webp",
												"/C:/Users/Zupper/Downloads/back/background/SashaBraus.webp",
												"/C:/Users/Zupper/Downloads/back/background/SashaBrausBread.webp",
												"/C:/Users/Zupper/Downloads/back/background/SashaBrausThinking.webp",
												"/C:/Users/Zupper/Downloads/back/background/SatouKazuma.webp",
												"/C:/Users/Zupper/Downloads/back/background/Shenlong.webp",
												"/C:/Users/Zupper/Downloads/back/background/Sucy.webp",
												"/C:/Users/Zupper/Downloads/back/background/TakanashiRikka.webp",
												"/C:/Users/Zupper/Downloads/back/background/TakanashiRikkaChuuni.webp",
												"/C:/Users/Zupper/Downloads/back/background/TakanashiRikkaNormal.webp",
												"/C:/Users/Zupper/Downloads/back/background/ToshinoKyoko.webp",
												"/C:/Users/Zupper/Downloads/back/background/ToshinoKyokoTomato.gif",
												"/C:/Users/Zupper/Downloads/back/background/ToshinoKyokoTomato.png",
												"/C:/Users/Zupper/Downloads/back/background/ToshinoKyokoTomatoPraying.png",
												"/C:/Users/Zupper/Downloads/back/background/UmaruDoma.png",
												"/C:/Users/Zupper/Downloads/back/background/Yato.webp",
												"/C:/Users/Zupper/Downloads/back/background/YatoKing.webp",
												"/C:/Users/Zupper/Downloads/back/background/YatoScared.webp",
												"/C:/Users/Zupper/Downloads/back/background/YuiFunami.webp"
											]
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/image",
									"host": [
										"{{url}}"
									],
									"path": [
										"image"
									],
									"query": [
										{
											"key": "folder",
											"value": "highscoregirl",
											"disabled": true
										}
									]
								},
								"description": "If the param folder are null, the image are a background"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "DeteleImage",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/image/:folder/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										":folder",
										":name"
									],
									"variable": [
										{
											"key": "folder",
											"value": "background"
										},
										{
											"key": "name",
											"value": "KuririnSuspicious.webp"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Token",
			"item": [
				{
					"name": "CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"a@a.bc\",\n\t\"nickname\": \"ab\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/token/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"token",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetToken",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/token/:nickname",
							"host": [
								"{{url}}"
							],
							"path": [
								"token",
								":nickname"
							],
							"variable": [
								{
									"key": "nickname",
									"value": "qa"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Manga",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GetAll",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas?limit=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetByName",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "High Score Girl"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetByName-NotFound",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "High Score Girl1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCardByName",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/card/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"card",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Naruto"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCardByName-NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5aec6a57-5b4a-4c68-a00b-b07bf59d6d73",
										"exec": [
											"pm.test('Status 404', function () {\r",
											"    pm.response.to.have.status(404)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/card/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"card",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "NarutoS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetRandomCards",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/card/random?limit=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"card",
										"random"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetSort",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/sort?limit=1&order=name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"sort"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "order",
											"value": "name"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetSortCard",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/card/sort?limit=1&order=name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"card",
										"sort"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "order",
											"value": "name"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "CreateAMangaWithImages",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n  \"name\": \"Naruto2\",\n  \"synopsis\": \"sinopse quauqer\",\n  \"comment\": \"comentario\",\n  \"info\": {\n    \"author\": \"autor\",\n    \"status\": \"situacao da obra\",\n    \"numberChapters\": 12,\n    \"numberVolumes\": 1\n  },\n  \"whereRead\": [\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    }\n  ]\n}",
											"type": "text"
										},
										{
											"key": "card",
											"type": "file",
											"src": "oono.jpg"
										},
										{
											"key": "images",
											"type": "file",
											"src": [
												"haruo.png",
												"hiscoregirl.jpg"
											]
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/mangas?folder=naruto",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas"
									],
									"query": [
										{
											"key": "folder",
											"value": "naruto"
										}
									]
								},
								"description": "Field accepts: folder, name, photo, synopsis, comment, images(an array of string), info(an object -> numberEpisodes), whereWatch and musics.\r\nwhereWatch and musics type: an object with language, url and name.\r\nFiles can be upload, in this case should be passed a query param for folder. The folder are used to create a file, when a file are send without a folder param, a undefined folder are created in server"
							},
							"response": []
						},
						{
							"name": "CreateAMangaWithoutImages",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n  \"name\": \"Grand Blue\",\n  \"synopsis\": \"sinopse quauqer\",\n  \"comment\": \"comentario\",\n  \"info\": {\n    \"author\": \"autor\",\n    \"status\": \"situacao da obra\",\n    \"numberChapters\": 12,\n    \"numberVolumes\": 1\n  },\n  \"whereRead\": [\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    }\n  ]\n}",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/mangas",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas"
									]
								},
								"description": "Field accepts: folder, name, photo, synopsis, comment, images(an array of string), info(an object -> numberEpisodes), whereWatch and musics.\r\nwhereWatch and musics type: an object with language, url and name.\r\nFiles can be upload, in this case should be passed a query param for folder. The folder are used to create a file, when a file are send without a folder param, a undefined folder are created in server"
							},
							"response": []
						},
						{
							"name": "CreateAManga-AlreadyExists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b330e943-778f-4821-8d27-dd29960e73b9",
										"exec": [
											"pm.test('Status 409', function () {\r",
											"    pm.response.to.have.status(409)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n  \"name\": \"NarutoS\",\n  \"synopsis\": \"sinopse quauqer\",\n  \"comment\": \"comentario\",\n  \"info\": {\n    \"author\": \"autor\",\n    \"status\": \"situacao da obra\",\n    \"numberChapters\": 12,\n    \"numberVolumes\": 1\n  },\n  \"whereRead\": [\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    }\n  ]\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/mangas",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas"
									]
								},
								"description": "Field accepts: folder, name, photo, synopsis, comment, images(an array of string), info(an object -> numberEpisodes), whereWatch and musics.\r\nwhereWatch and musics type: an object with language, url and name.\r\nFiles can be upload, in this case should be passed a query param for folder. The folder are used to create a file, when a file are send without a folder param, a undefined folder are created in server"
							},
							"response": []
						},
						{
							"name": "CreateAManga-Unauthorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4eac2bb0-b490-4428-8cd6-1c36758cb45f",
										"exec": [
											"pm.test('Status 401', function () {\r",
											"    pm.response.to.have.status(401)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dados",
											"value": "{\n  \"name\": \"NarutoS\",\n  \"synopsis\": \"sinopse quauqer\",\n  \"comment\": \"comentario\",\n  \"info\": {\n    \"author\": \"autor\",\n    \"status\": \"situacao da obra\",\n    \"numberChapters\": 12,\n    \"numberVolumes\": 1\n  },\n  \"whereRead\": [\n    {\n      \"language\": \"idioma\",\n      \"url\": \"link do site\",\n      \"name\": \"nome do site\"\n    }\n  ]\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/mangas",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas"
									]
								},
								"description": "Field accepts: folder, name, photo, synopsis, comment, images(an array of string), info(an object -> numberEpisodes), whereWatch and musics.\r\nwhereWatch and musics type: an object with language, url and name.\r\nFiles can be upload, in this case should be passed a query param for folder. The folder are used to create a file, when a file are send without a folder param, a undefined folder are created in server"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PATCH ",
					"item": [
						{
							"name": "UpdateAnyFieldThatAreNotFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f37722f3-45f0-4e03-b8e8-c4eedf8a65f4",
										"exec": [
											"pm.test('Status should be 204', function () {\r",
											"    pm.response.to.have.status(204)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dados\": {\n        \"name\": \"Naruto\",\n        \"synopsis\": \"sinopse teste 1\",\n        \"comment\": \"comentario teste 1\",\n        \"folder\": \"pasta teste1 \",\n        \"info\": {\n            \"author\": \"autor test 1e\",\n            \"status\": \"finalizado 1\",\n            \"numberChapters\": 12,\n            \"numberVolumes\": 12\n        },\n        \"whereRead\": [\n            {\n                \"language\": \"portugues\",\n                \"url\": \"teste2\",\n                \"name\": \"teste\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "Naruto"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateImage-MissingFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff402394-2603-49e5-9fba-7b8b10bba1bb",
										"exec": [
											"pm.test('Status should be 422', function () {\r",
											"    pm.response.to.have.status(422)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}/mangas/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "Teste"
										}
									]
								},
								"description": "Should have the query param 'folder'.\r\nThe 'name' are case sensitive and includes space. \r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage-NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b07808ae-8aec-40a8-81c2-614c3bbe4c8d",
										"exec": [
											"pm.test('Status should be 404', function () {\r",
											"    pm.response.to.have.status(404)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "card",
											"type": "file",
											"src": "hiscoregirl.jpg"
										},
										{
											"key": "images",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{url}}/mangas/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "NotFound"
										}
									]
								},
								"description": "Should have the query param 'folder'.\r\nThe 'name' are case sensitive and includes space. \r\nEx: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "images",
											"type": "file",
											"src": "HSGirlThumb-696x392.jpg"
										}
									]
								},
								"url": {
									"raw": "{{url}}/mangas/image/:name?folder=naruto",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "naruto"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "Naruto"
										}
									]
								},
								"description": "Should have the query param 'folder'. The 'name' are case sensitive and includes space. Ex: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						},
						{
							"name": "UpdateImage-Unauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "images",
											"type": "file",
											"src": [
												"haruo.png",
												"Hi_Score_Girl_vol_1_cover.png",
												"oono.jpg"
											]
										}
									]
								},
								"url": {
									"raw": "{{url}}/mangas/image/:name?folder=teste",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										"image",
										":name"
									],
									"query": [
										{
											"key": "folder",
											"value": "teste"
										}
									],
									"variable": [
										{
											"key": "name",
											"value": "nome teste2"
										}
									]
								},
								"description": "Should have the query param 'folder'. The 'name' are case sensitive and includes space. Ex: Mob, Mob 2, mob, mob2 this values going to return diffent results"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c4ba5b1-7137-4256-ac47-2673e36e102f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f1da6a81-c0c0-4e87-be50-a0e5fd2370c2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "DeleteManga",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "NarutoS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteManga-NotFound",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "NarutoS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteManga-Unauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/mangas/:name",
									"host": [
										"{{url}}"
									],
									"path": [
										"mangas",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "NarutoS"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Mixed",
			"item": [
				{
					"name": "GetCards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mixed/card/random?limit=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"mixed",
								"card",
								"random"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetRandom",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mixed/random?limit=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"mixed",
								"random"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6InFhIiwiZW1haWwiOiJxYSIsImlhdCI6MTU5MzAwNjAzNX0.xvJZwr-ze367CB-ef-nmaXvYgiGHA-Qxgvc1l7Nf-U0",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5fc2a308-98e7-47d1-b939-5dd36ebb76d9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0ae910be-f5c1-44a7-b88c-a9914d4b5be9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "2261ff23-0beb-49f0-955d-976dd39af321",
			"key": "url",
			"value": "http://localhost:4000"
		}
	],
	"protocolProfileBehavior": {}
}