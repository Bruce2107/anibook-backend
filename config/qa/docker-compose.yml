version: '3'

services:
  postgresdb:
    container_name: postgres_anibook_qa
    image: postgres:12
    environment:
      - POSTGRES_DB=anibook_qa
      - POSTGRES_USER=anibook_qa
      - POSTGRES_PASSWORD=anibook_qa
      - MAX_CONNECTIONS=300
    ports:
      - '5433:5432'
    volumes:
      - ./config/database/AnibookRelacional.sql:/docker-entrypoint-initdb.d/2-data.sql
      - ./image.webp:/home/image.webp
  neo4jdb:
    container_name: neo4j_anibook
    image: neo4j:latest
    ports:
      - '7474:7474'
      - '7687:7687'
      - '7473:7473'
    environment:
      - NEO4J_AUTH=neo4j/anibook_qa
      - NEO4J_HOME=/var/lib/neo4j
    volumes:
      - ./config/csv:/var/lib/neo4j/import
    # command: cypher-shell --file $NEO4J_HOME/import/data.cypher -u neo4j -p anibook_qa
  # node:
  #   build:
  #     dockerfile: ../../config/docker/Dockerfile
  #     context: .
  #   image: anibook/node
  #   container_name: anibook_node_qa
  #   ports:
  #     - '4001:4000'
  #   volumes:
  #     - ../../src:/var/www
  #   environment:
  #     DB_USER_POSTGRES: anibook_qa
  #     DB_PASS_POSTGRES: anibook_qa
  #     DB_HOST_POSTGRES: postgres_anibook_qa
  #     DB_NAME_POSTGRES: anibook_qa
  #     DB_PORT_POSTGRES: 5432
  #     TOKEN: anibook_qa
  #     DB_PORT_NEO4J: 7687
  #     DB_USER_NEO4J: neo4j
  #     DB_PASS_NEO4J: anibook_qa
  #   depends_on:
  #     - 'postgresdb'
  #     - 'neo4jdb'
